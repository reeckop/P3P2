package GUI.EquipoMedico;

import Entidades.EquipoMedico;
import Persistencia.IPersistenciaFachada;
import Persistencia.PersistenciaFachada;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ricardo
 */
public class ConsultasInventarioEquipoMedicoPanel extends javax.swing.JPanel {
    private IPersistenciaFachada persistencia;

    /**
     * Creates new form ConsultasInventarioEquipoMedicoPanel
     */
    public ConsultasInventarioEquipoMedicoPanel() {
        initComponents();
        this.persistencia = new PersistenciaFachada();
        try {
            cargarInventario(persistencia.listarEquiposMedicos(), modeloTabla);
        } catch (Exception ex) {
            Logger.getLogger(ConsultasInventarioEquipoMedicoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cargarInventario(List<EquipoMedico> equipos, JTable tabla){
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0);
        model.setColumnIdentifiers(new String[]{"ID","Nombre","Edad","Dirección"});
        
        for (EquipoMedico e : equipos) {
            model.addRow(new Object[]{e.getId(), e.getNombre(), e.getCantidad()});
            System.out.println(e.getId());
        }
    }
    
//    private void inicializarTabla() {
//        String[] columnNames = {"ID", "Nombre", "Cantidad"};
//        modeloTabla = new DefaultTableModel(columnNames, 0) {
//            @Override
//            public boolean isCellEditable(int row, int column) {
//                return false; // Hacer que la tabla no sea editable
//            }
//        };
//        modeloTabla.setModel(modeloTabla);
//    }
//
//    /**
//     * Carga los datos de equipos médicos del archivo CSV a la tabla
//     */
//    public void cargarDatosEquipoMedico() {
//        // Limpiar la tabla antes de cargar nuevos datos
//        modeloTabla.setRowCount(0);
//
//        try {
//            // Obtener todos los equipos médicos utilizando la clase de persistencia
//            List<EquipoMedico> equipos = persistencia.listarEquiposMedicos();
//
//            // Agregar cada equipo médico como una fila en la tabla
//            for (EquipoMedico equipo : equipos) {
//                Object[] fila = {
//                    equipo.getId(),
//                    equipo.getNombre(),
//                    equipo.getCantidad()
//                };
//                modeloTabla.addRow(fila);
//            }
//
//            if (equipos.isEmpty()) {
//                JOptionPane.showMessageDialog(this,
//                        "No hay equipos médicos registrados en el inventario.",
//                        "Inventario vacío",
//                        JOptionPane.INFORMATION_MESSAGE);
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this,
//                    "Error al cargar el inventario de equipos médicos: " + e.getMessage(),
//                    "Error",
//                    JOptionPane.ERROR_MESSAGE);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        modeloTabla = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Equipo Medico Inventario");

        modeloTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(modeloTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable modeloTabla;
    // End of variables declaration//GEN-END:variables
}
